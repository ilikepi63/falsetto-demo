import { Attribute } from "./attributes";
import Table from "./table";
import MultiExecutable from "./executables/multi-executable";
import Executable from "./executables/executable";
import Query from "./query";
/** Function to retrieve the first-most query that
 * can support the schema.
 *
 * @param keys - keys the query uses.
 * @param schema - the schema given
 */
export declare const getTableFromSchema: (keys: Array<string>, schema: Schema) => void;
export default class Schema {
    tables: Array<Table>;
    attributes: Record<string, Attribute>;
    name: string;
    constructor(name: string, attributes: Record<string, Attribute>);
    addTable(query: Table): Schema;
    createTables(): MultiExecutable;
    get(attributes?: Array<string>): Query;
    put(data: Record<string, any>): Executable;
}
