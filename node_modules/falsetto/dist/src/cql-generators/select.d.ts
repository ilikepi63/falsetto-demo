import Table from "../table";
export declare const SELECT = "SELECT";
export declare const FROM = "FROM";
export declare const WHERE = "WHERE";
export declare const AND = "AND";
export interface IConstraint {
    subject: string;
    operator?: string;
    value: unknown;
}
export interface IQuery {
    table: Table;
    attributes?: Array<string>;
    constraints?: Array<IConstraint>;
}
export interface ISelectStatement {
    params: Array<any>;
    query: string;
}
export declare const generateAttributes: (arr: Array<string>) => string;
export declare const stringFromAttributes: (arr: Array<string> | void) => string;
export declare const getResultantConstraint: (constraint: IConstraint) => string;
export declare const getWhereFromConstraints: (constraints: Array<IConstraint>) => ISelectStatement;
export declare const whereStatement: (constraints?: IConstraint[] | undefined) => ISelectStatement;
export declare const generateSelectQuery: ({ table, attributes, constraints }: IQuery) => ISelectStatement;
